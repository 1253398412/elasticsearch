[[query-dsl-span-multi-term-query]]
=== Span multi-term query
++++
<titleabbrev>Span multi-term</titleabbrev>
++++

Wraps one of the following query types as a <<span-queries,span query>>:

* <<query-dsl-fuzzy-query, `fuzzy`>>
* <<query-dsl-prefix-query, `prefix`>>
* <<query-dsl-regexp-query, `regexp`>>
* <<query-dsl-wildcard-query, `wildcard`>>

[[span-multi-term-query-ex-request]]
==== Example request

[source,js]
----
GET /_search
{
    "query": {
        "span_multi":{
            "match":{
                "prefix" : { 
                    "message" : { 
                        "value" : "ki" 
                    } 
                }
            }
        }
    }
}
----
// CONSOLE

[[span-multi-top-level-params]]
==== Top-level parameters for `span_multi`

`match`::
+
--
(Required, query object) Contains a <<query-dsl-fuzzy-query, `fuzzy`>>,
<<query-dsl-prefix-query, `prefix`>>, <<query-dsl-regexp-query, `regexp`>>, or
<<query-dsl-wildcard-query, `wildcard`>> query. Returned documents must match
this query.

[WARNING]
======
The `span_multi` query returns an error if the number of matching terms exceeds
the
<<indices-query-bool-max-clause-count,`indices.query.bool.max_clause_count`>>
limit, which defaults to `1024`. To avoid this, set the
<<query-dsl-multi-term-rewrite, `rewrite` parameter>> of the wrapped query to
`top_terms_N`.

If the `span_multi` query wraps a `prefix` query, you can use the
<<index-prefixes,`index_prefixes`>> parameter for <<text,`text`>> fields
instead. The `index_prefixes` parameter rewrites the `prefix` query to a single
`term` query that matches the indexed prefix.
======
--


