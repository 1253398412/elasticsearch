[[query-dsl-match-query-phrase]]
=== Match phrase query
++++
<titleabbrev>Match phrase</titleabbrev>
++++
Returns documents that contain all words of a provided text, in the **same
order** as provided.

You can use the `match_phrase` query when it's important to find a complete
phrase or words near each other.


[[match-phrase-query-ex-request]]
==== Example request

The following `match_phrase` search returns documents containing `brown fox` in
the `message` field.

This search would match a `message` value of `quick brown fox` but not `the fox
is brown`.

[source,js]
--------------------------------------------------
GET /_search
{
    "query": {
        "match_phrase" : {
            "message" : {
                "query" : "brown fox"
            }
        }
    }
}
--------------------------------------------------
// CONSOLE


[[match-phrase-top-level-params]]
==== Top-level parameters for `match_phrase`
`<field>`::
(Required, object) Field you wish to search.

[[match-phrase-field-params]]
==== Parameters for `<field>`
`query`::
+
--
(Required, string) Text you wish to find in the provided `<field>`.

The `match_phrase` query <<analysis,analyzes>> any provided text into tokens
before performing a search.
--

`analyzer`::
(Optional, string) <<analysis,Analyzer>> used to convert text in the `query`
value into tokens. Defaults to the <<specify-index-time-analyzer,index-time
analyzer>> mapped for the `<field>`. If no analyzer is mapped, the index's
default analyzer is used.

`slop`::
(Optional, integer) Maximum number of positions allowed between matching tokens.
Defaults to `0`. Transposed terms have a slop of `2`.

`zero_terms_query`::
+
--
(Optional, string) Indicates whether no documents are returned if the `analyzer`
removes all tokens, such as when using a `stop` filter. Valid values are:

 `none` (Default)::
No documents are returned if the `analyzer` removes all tokens.

 `all`::
Returns all documents, similar to a <<query-dsl-match-all-query,`match_all`>>
query.
--
